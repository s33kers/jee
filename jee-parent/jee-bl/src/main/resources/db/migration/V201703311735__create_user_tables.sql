CREATE SEQUENCE HIBERNATE_SEQUENCE;

CREATE TABLE JEE_USER (
  ID              BIGINT       NOT NULL CONSTRAINT PK_JEE_USER PRIMARY KEY,
  VERSION         BIGINT,
  HASHED_PASSWORD VARCHAR(255),
  NAME            VARCHAR(255),
  PRINCIPAL_EMAIL VARCHAR(255) NOT NULL CONSTRAINT UK_PRINCIPAL_EMAIL UNIQUE,
  SURNAME         VARCHAR(255),
  ROLE            VARCHAR(255) NOT NULL,
  ACTIVATED       BOOLEAN DEFAULT FALSE,
  BLOCKED         BOOLEAN DEFAULT FALSE
);

CREATE TABLE AUTHENTICATION_TOKEN (
  ID                   BIGINT       NOT NULL CONSTRAINT PK_AUTHENTICATION_TOKEN PRIMARY KEY,
  VERSION              BIGINT,
  AUTHENTICATION_TOKEN VARCHAR(255),
  USER_ID              BIGINT CONSTRAINT FK_AUTH_TOKEN_USER REFERENCES JEE_USER,
  CREATION_DATE        TIMESTAMP,
  TOKEN_TYPE           VARCHAR(255) NOT NULL
);

CREATE TABLE SURVEY (
  ID             BIGINT NOT NULL CONSTRAINT PK_SURVEY PRIMARY KEY,
  VERSION        BIGINT,
  CREATION_DATE  TIMESTAMP,
  SURVEY_TOKEN   VARCHAR(255),
  SURVEY_TYPE    VARCHAR(255),
  PUBLIC_RESULTS BOOLEAN DEFAULT FALSE,
  UPLOADED       BOOLEAN DEFAULT FALSE,
  USER_ID        BIGINT CONSTRAINT FK_SURVEY_USER REFERENCES JEE_USER
);

CREATE TABLE PAGE (
  ID          BIGINT NOT NULL CONSTRAINT PK_PAGE PRIMARY KEY,
  VERSION     BIGINT,
  TITLE       VARCHAR(255),
  SURVEY_ID   BIGINT CONSTRAINT FK_PAGE_SURVEY REFERENCES SURVEY,
  PAGE_NUMBER INTEGER
);

CREATE TABLE BASE_QUESTION (
  ID              BIGINT NOT NULL CONSTRAINT PK_BASE_QUESTION PRIMARY KEY,
  OPTIONAL        BOOLEAN DEFAULT FALSE,
  PLACE_HOLDER    VARCHAR(255),
  QUESTION        VARCHAR(255),
  QUESTION_TYPE   VARCHAR(255),
  VERSION         BIGINT,
  PAGE_ID         BIGINT CONSTRAINT FK_BASE_QUESTION_PAGE REFERENCES PAGE,
  QUESTION_NUMBER INTEGER
);

CREATE TABLE CHOOSE_QUESTION (
  ID BIGINT NOT NULL CONSTRAINT PK_CHOOSE_QUESTION PRIMARY KEY CONSTRAINT FK_CHOOSE_QUESTION_BQ REFERENCES BASE_QUESTION
);

CREATE TABLE SCALE_QUESTION (
  ID        BIGINT NOT NULL CONSTRAINT PK_SCALE_QUESTION PRIMARY KEY CONSTRAINT FK_SCALE_QUESTION_BQ REFERENCES BASE_QUESTION,
  MAX_VALUE NUMERIC(19, 2),
  MIN_VALUE NUMERIC(19, 2)
);

CREATE TABLE TEXT_QUESTION (
  ID          BIGINT NOT NULL CONSTRAINT PK_TEXT_QUESTION PRIMARY KEY CONSTRAINT FK_TEXT_QUESTION_BQ REFERENCES BASE_QUESTION,
  SINGLE_LINE BOOLEAN DEFAULT FALSE
);

CREATE TABLE CHOOSE_QUESTION_ANSWER (
  ID                 BIGINT NOT NULL CONSTRAINT PK_CHOOSE_QUESTION_ANSWER PRIMARY KEY,
  VERSION            BIGINT,
  ANSWER_NUMBER      INTEGER,
  CHOOSE_QUESTION_ID BIGINT CONSTRAINT FK_CQ_ANSWER_CQ REFERENCES CHOOSE_QUESTION,
  ANSWER             VARCHAR(255)
);

CREATE TABLE SURVEY_ANSWER (
  ID        BIGINT NOT NULL CONSTRAINT PK_SURVEY_ANSWER PRIMARY KEY,
  COMPLETED BOOLEAN DEFAULT FALSE,
  SAVED_URL VARCHAR(255),
  VERSION   BIGINT,
  SURVEY_ID BIGINT CONSTRAINT FK_SA_SURVEY REFERENCES SURVEY
);

CREATE TABLE QUESTION_ANSWER (
  ID               BIGINT NOT NULL CONSTRAINT PK_QUESTION_ANSWER PRIMARY KEY,
  ANSWER           VARCHAR(255),
  VERSION          BIGINT,
  QUESTION_ID      BIGINT CONSTRAINT FK_QA_QUESTION REFERENCES BASE_QUESTION,
  SURVEY_ANSWER_ID BIGINT CONSTRAINT FK_QA_SURVEY_ANSWER REFERENCES SURVEY_ANSWER
);

CREATE TABLE MULTIPLE_ANSWERS (
  QUESTION_ANSWER_ID        BIGINT NOT NULL CONSTRAINT FK_MA_QUESTION_ANSWER REFERENCES QUESTION_ANSWER,
  CHOOSE_QUESTION_ANSWER_ID BIGINT NOT NULL CONSTRAINT FK_MA_CHOOSE_QUESTION_ANSWER REFERENCES CHOOSE_QUESTION_ANSWER,
  CONSTRAINT PK_MULTIPLE_ANSWERS PRIMARY KEY (QUESTION_ANSWER_ID, CHOOSE_QUESTION_ANSWER_ID)
);
